package fr.tao.bankaccount.mapper;

import java.util.List;

import org.mapstruct.BeanMapping;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.NullValuePropertyMappingStrategy;
import org.mapstruct.ReportingPolicy;
import org.mapstruct.factory.Mappers;

import fr.tao.bankaccount.dto.operation.OperationDto;
import fr.tao.bankaccount.dto.operation.TransferDto;
import fr.tao.bankaccount.entity.Operation;


/**
 * Mapper interface for converting between different representations of operations.
 * 
 * @author T. Aoufi
 * @version 1.0
 * @since 17/03/2024
 */
@Mapper(componentModel = "spring", uses = {AccountMapper.class}, unmappedTargetPolicy = ReportingPolicy.IGNORE)
public interface OperationMapper {
	
	/**
     * Instance of the OperationMapper interface generated by MapStruct.
     */
	OperationMapper INSTANCE = Mappers.getMapper(OperationMapper.class);
	
	/**
     * Converts an Operation entity to its corresponding DTO representation.
     *
     * @param operation The Operation entity to be converted.
     * @return The corresponding OperationDto.
     */
	@BeanMapping(nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)
	OperationDto toDto(Operation operation);
	
	/**
     * Converts an OperationDto to its corresponding entity representation.
     *
     * @param operationDto The OperationDto to be converted.
     * @return The corresponding Operation entity.
     */
	@BeanMapping(nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)
	Operation toEntity(OperationDto operationDto);
	
	/**
     * Maps a list of Operation entities to a list of corresponding OperationDto objects.
     *
     * @param operations The list of Operation entities to be converted.
     * @return The list of corresponding OperationDto objects.
     */
    @Mapping(source = "account", target = "accountDto")
    default List<OperationDto> mapOperations(List<Operation> operations) {
        return operations.stream().map(this::toDto).toList();
    }
    
    /**
     * Converts a list of OperationDto objects to a list of corresponding Operation entities.
     *
     * @param operationDtos The list of OperationDto objects to be converted.
     * @return The list of corresponding Operation entities.
     */
    List<Operation> mapOperationDtos(List<OperationDto> operationDtos);
    
    /**
     * Converts an Operation entity to its corresponding TransferDto representation.
     *
     * @param operation The Operation entity to be converted.
     * @return The corresponding TransferDto.
     */
    TransferDto toTransferDto(Operation operation);
    
    /**
     * Converts a TransferDto to its corresponding Operation entity.
     *
     * @param transferDto The TransferDto to be converted.
     * @return The corresponding Operation entity.
     */
    Operation toOperation(TransferDto transferDto);

}
